#!/bin/bash

prj_name=$1
app_type=$2
port=3000
container_name="my-server"
if [ $app_type != "-s" ]
then
  port=$(( ((RANDOM<<15)|RANDOM) % 63001 + 2000 ))
  container_name="my-client-$port"	
fi
echo "hosting port for app: "$port
cmd='CMD ["valgrind", "--leak-check=full", "--show-leak-kinds=all", "./myapp", '
for (( i=3; i<"$#"+1; i++ ))
do
  cmd+='"'${!i}'"'
  if [ $i -ne $# ]
  then
    cmd+=", "
  fi
done
cmd+="]"
mkdir -p "$prj_name/app/global-headers"
mkdir -p "$prj_name/app/project/src"
mkdir -p "$prj_name/app/project/headers"
mkdir -p "$prj_name/app/project/test"
mkdir -p "$prj_name/app/project/local-storage"
cd "$1/"
cp -rf ./../global-headers/* ./app/global-headers/
cp -rf ./src/* ./app/project/src/
cp -rf ./headers/* ./app/project/headers/
cp -rf ./test/* ./app/project/test/
cp -rf ./local-storage/* ./app/project/local-storage/
echo -e 'FROM gcc-valgrind' >> Dockerfile
echo -e 'COPY ./app /usr/src/myapp' >> Dockerfile
echo -e 'WORKDIR /usr/src/myapp/project/src' >> Dockerfile
echo -e 'RUN gcc -std=gnu99 -g -Wall -DTRACE -o myapp ./*' >> Dockerfile
echo -e 'EXPOSE '$port':'$port'' >> Dockerfile
echo -e $cmd >> Dockerfile
sudo docker build -t $container_name .
rm -r "./app"
rm Dockerfile
sudo docker run -it --rm --name $container_name -p 127.0.0.1:$port:$port --network=host $container_name
sudo docker system prune -f
#sudo docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $container_name


